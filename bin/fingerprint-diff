#!/usr/bin/env ruby

# Copyright (c) 2011 Samuel G. D. Williams. <http://www.oriontransfer.co.nz>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

require 'optparse'
require 'pathname'
require 'fingerprint'
require 'lockfile'
require 'fileutils'

OPTIONS = {
	:mode => nil,
	:output => $stdout,
	:verbose => false,
	:force => false,
	:extended => false,
	:inverse => false
}

$options = nil

ARGV.options do |o|
	$options = o
	
	script_name = File.basename($0)

	o.banner = "Usage: #{script_name} [options] [path]"
	o.define_head "This script is used to calculate the differences between two fingerprints."

	o.separator ""
	o.separator "Set operations between fingerprints:"
	
	o.on("--duplicates", "Calculate files in copy that already exist in master") do |master, copy|
		OPTIONS[:mode] = :duplicates
	end
		
	o.separator ""
	o.separator "Output manipulation:"
	
	o.on("-o [output-path]", String, "Write the fingerprint output to the given file.") do |path|
		OPTIONS[:output] = File.open(path, "w")
	end
	
	o.on("--verbose", "Verbose output, include additional details in the file transcript.") do
		OPTIONS[:verbose] = true
	end
	
	o.on("--progress", "Print percentage progress to standard error.") do
		OPTIONS[:progress] = true
	end
	
	o.on("--inverse", "Show the inverse of the selected operation.") do
		OPTIONS[:inverse] = true
	end
	
	o.separator ""
	o.separator "Help and Copyright information:"

	o.on_tail("--copy", "Display copyright and warranty information") do
		$stderr.puts "#{script_name} v#{Fingerprint::VERSION::STRING}. Copyright (c) 2011 Samuel Williams."
		$stderr.puts "This software is released under the MIT license and comes with ABSOLUTELY NO WARRANTY."
		$stderr.puts "See http://www.oriontransfer.co.nz/ for more information."
		exit
	end

	o.on_tail("-h", "--help", "Show this help message.") do
		$stderr.puts o
		exit
	end
end.parse!

case (OPTIONS[:mode])
when :duplicates
	options = OPTIONS.dup
	
	include Fingerprint
	
	duplicates_recordset = RecordSet.new
	results = RecordSetPrinter.new(duplicates_recordset, OPTIONS[:output])
	
	master_file_path = ARGV.shift
	File.open(master_file_path) do |master_file|
		master_recordset = RecordSet.new
		master_recordset.parse(master_file)
		
		ignore_similar = false
		
		copy_file_paths = ARGV
		if copy_file_paths.size == 0
			copy_file_paths = [master_file_path]
			ignore_similar = true
		end
		
		copy_file_paths.each do |copy_file_path|
			File.open(copy_file_path) do |copy_file|
				copy_recordset = RecordSet.new
				copy_recordset.parse(copy_file)
				
				copy_recordset.records.each do |record|
					record.metadata['fingerprint'] = copy_file_path
					# We need to see if the record exists in the master
					
					if OPTIONS[:verbose]
						$stderr.puts "Checking #{record.inspect}"
					end
					
					main_record = master_recordset.find_by_key(record)
					
					# If we are scanning the same index, don't print out every file, just those that are duplicates within the single file.
					if ignore_similar && main_record && (main_record.path == record.path)
						main_record = nil
					end
					
					if main_record
						record.metadata['original.path'] = main_record.path
						record.metadata['original.fingerprint'] = master_file_path
						results << record if !OPTIONS[:inverse]
					else
						results << record if OPTIONS[:inverse]
					end
				end
			end
		end
	end
else
	puts $options
end
